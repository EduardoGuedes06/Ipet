@model IEnumerable<Ipet.ViewModels.CompraViewModel>

@{
    ViewData["Title"] = "Detalhes da Compra";
}
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="format-detection" content="telephone=no">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="author" content="">
    <meta name="keywords" content="">
    <meta name="description" content="">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ" crossorigin="anonymous">
    <link rel="stylesheet" type="text/css" href="~/css/vendor.css">
    <link rel="stylesheet" href="~/css/dog.css" />
    @* <link rel="stylesheet" type="text/css" href="~/css/style.css"> *@
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;700&family=Open+Sans:ital,wght@0,400;0,700;1,400;1,700&display=swap" rel="stylesheet">
    <style>

        .logo {
            max-width: 100px;
            border-radius: 20px;
        }
    </style>
    <style>
        .container_1 {
            max-width: 1000px; /* Ajuste o valor conforme necessário */
            margin: 50px auto;
            background-color: #fff;
            border-radius: 8px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            height: calc(100vh - 200px); /* Ajuste a altura conforme necessário */
            overflow-y: auto; /* Habilita a rolagem vertical se o conteúdo ultrapassar a altura do contêiner */
            padding-bottom: 50px; /* Adiciona espaço extra no final do conteúdo */
        }

        .card {
            margin-bottom: 20px;
        }

        .list-group-item {
            border-color: #dee2e6;
        }
    </style>

</head>
<div class="container">
    <h1 class="text-center" style="margin-bottom:30px">Histórico de Compras</h1>

    @foreach (var compra in Model)
    {
        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-12">
                        @if (compra.Status == "Aprovado")
                        {
                            <h5 class="mb-0" style="    color: #7AF204;">
                                Compra realizada em: @compra.DataCompra
                            </h5>
                        }
                        else if (compra.Status == "Aguardando Pagamento")
                        {
                            <h5 class="mb-0" style="    color: #8b168b;">
                                Compra agardando Pagamento desde : @compra.DataCadastro
                            </h5>
                        }
                        else 
                        {
                            <h5 class="mb-0" style="    color: #F60002;">
                                Compra cancelada em: @compra.DataCompra
                            </h5>
                        }

                            <p class="mb-1" style="color:black">Valor do Pedido: R$ @compra.Valor</p>
                        <ul>
                            @foreach (var item in compra.ListaProdutos.Split(new string[] { "\r\n" }, StringSplitOptions.RemoveEmptyEntries))
                            {
                                var parts = item.Trim().Split(':');
                                var productId = parts[0].Trim();
                                var produtoInfo = parts[1].Trim().Split('-');
                                var quantidadeNomeProduto = produtoInfo[0].Trim().Split(' ');
                                var quantidade = quantidadeNomeProduto[0].Trim();
                                var nomeProduto = string.Join(" ", quantidadeNomeProduto.Skip(1)).Trim();
                                var valor = produtoInfo[1].Trim();
                                <li>
                                    @quantidade x <a href="@Url.Action("Details", "Produtos", new { id = productId })">@nomeProduto</a> - <span style="font-style:italic"> Valor: R$ @valor</span>
                                    @if (compra.Status == "Aprovado")
                                    {
                                        <a href="@Url.Action("Index", "Avaliacao", new { id = productId })" title="Product Title">
                                            <span class="rating">
                                                <svg width="35" height="35" class="text-primary">
                                                    <use xlink:href="#star-solid"></use>
                                                </svg>Avaliar
                                            </span>
                                        </a>
                                    }

                                </li>
                            }
                        </ul>

                    </div>
                </div>
            </div>
        </div>
    }


</div>
<div class="row">
    <br />
    <br />
</div>
